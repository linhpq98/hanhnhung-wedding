{
  "version": 3,
  "sources": ["../../../../../node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js"],
  "sourcesContent": ["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar zoomSettings = {\r\n    scale: 1,\r\n    zoom: true,\r\n    infiniteZoom: true,\r\n    actualSize: true,\r\n    showZoomInOutIcons: false,\r\n    actualSizeIcons: {\r\n        zoomIn: 'lg-zoom-in',\r\n        zoomOut: 'lg-zoom-out',\r\n    },\r\n    enableZoomAfter: 300,\r\n    zoomPluginStrings: {\r\n        zoomIn: 'Zoom in',\r\n        zoomOut: 'Zoom out',\r\n        viewActualSize: 'View actual size',\r\n    },\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar ZOOM_TRANSITION_DURATION = 500;\r\nvar Zoom = /** @class */ (function () {\r\n    function Zoom(instance, $LG) {\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n        return this;\r\n    }\r\n    // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n    Zoom.prototype.buildTemplates = function () {\r\n        var zoomIcons = this.settings.showZoomInOutIcons\r\n            ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n            : '';\r\n        if (this.settings.actualSize) {\r\n            zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['viewActualSize'] + \"\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n        }\r\n        this.core.outer.addClass('lg-use-transition-for-zoom');\r\n        this.core.$toolbar.first().append(zoomIcons);\r\n    };\r\n    /**\r\n     * @desc Enable zoom option only once the image is completely loaded\r\n     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n     *\r\n     * Zoom styles are defined under lg-zoomable CSS class.\r\n     */\r\n    Zoom.prototype.enableZoom = function (event) {\r\n        var _this = this;\r\n        // delay will be 0 except first time\r\n        var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n        // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n        if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n            event.detail.delay) {\r\n            // will execute only once\r\n            _speed = 0;\r\n        }\r\n        else {\r\n            // Remove lg-from-hash to enable starting animation.\r\n            this.$LG('body').first().removeClass('lg-from-hash');\r\n        }\r\n        this.zoomableTimeout = setTimeout(function () {\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n            if (event.detail.index === _this.core.index) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        }, _speed + 30);\r\n    };\r\n    Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n        // Add zoomable class\r\n        this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n    };\r\n    Zoom.prototype.getDragCords = function (e) {\r\n        return {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n        };\r\n    };\r\n    Zoom.prototype.getSwipeCords = function (e) {\r\n        var x = e.touches[0].pageX;\r\n        var y = e.touches[0].pageY;\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    };\r\n    Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first()\r\n            .get();\r\n        var height = 0;\r\n        var width = 0;\r\n        var rect = $image.getBoundingClientRect();\r\n        if (scale) {\r\n            height = $image.offsetHeight * scale;\r\n            width = $image.offsetWidth * scale;\r\n        }\r\n        else if (scaleDiff) {\r\n            height = rect.height + scaleDiff * rect.height;\r\n            width = rect.width + scaleDiff * rect.width;\r\n        }\r\n        else {\r\n            height = rect.height;\r\n            width = rect.width;\r\n        }\r\n        var allowY = height > this.containerRect.height;\r\n        var allowX = width > this.containerRect.width;\r\n        return {\r\n            allowX: allowX,\r\n            allowY: allowY,\r\n        };\r\n    };\r\n    Zoom.prototype.setZoomEssentials = function () {\r\n        this.containerRect = this.core.$content.get().getBoundingClientRect();\r\n    };\r\n    /**\r\n     * @desc Image zoom\r\n     * Translate the wrap and scale the image to get better user experience\r\n     *\r\n     * @param {String} scale - Zoom decrement/increment value\r\n     */\r\n    Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {\r\n        if (Math.abs(scaleDiff) <= 0)\r\n            return;\r\n        var offsetX = this.containerRect.width / 2 + this.containerRect.left;\r\n        var offsetY = this.containerRect.height / 2 +\r\n            this.containerRect.top +\r\n            this.scrollTop;\r\n        var originalX;\r\n        var originalY;\r\n        if (scale === 1) {\r\n            this.positionChanged = false;\r\n        }\r\n        var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\r\n        var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;\r\n        if (this.positionChanged) {\r\n            originalX = this.left / (this.scale - scaleDiff);\r\n            originalY = this.top / (this.scale - scaleDiff);\r\n            this.pageX = offsetX - originalX;\r\n            this.pageY = offsetY - originalY;\r\n            this.positionChanged = false;\r\n        }\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\r\n        var x;\r\n        var y;\r\n        var _x = offsetX - this.pageX;\r\n        var _y = offsetY - this.pageY;\r\n        if (scale - scaleDiff > 1) {\r\n            var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\r\n            _x =\r\n                (scaleDiff < 0 ? -_x : _x) +\r\n                    this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            _y =\r\n                (scaleDiff < 0 ? -_y : _y) +\r\n                    this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            x = _x / scaleVal;\r\n            y = _y / scaleVal;\r\n        }\r\n        else {\r\n            var scaleVal = (scale - scaleDiff) * scaleDiff;\r\n            x = _x * scaleVal;\r\n            y = _y * scaleVal;\r\n        }\r\n        if (reposition) {\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\r\n                    x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\r\n                    x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            else {\r\n                if (scale > 1) {\r\n                    if (x < possibleSwipeCords.minX) {\r\n                        x = possibleSwipeCords.minX;\r\n                    }\r\n                    else if (x > possibleSwipeCords.maxX) {\r\n                        x = possibleSwipeCords.maxX;\r\n                    }\r\n                }\r\n            }\r\n            // @todo fix this\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\r\n                    y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\r\n                    y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            else {\r\n                // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\r\n                if (scale > 1) {\r\n                    //If image goes beyond viewport top, use the minim possible translate value\r\n                    if (y < possibleSwipeCords.minY) {\r\n                        y = possibleSwipeCords.minY;\r\n                    }\r\n                    else if (y > possibleSwipeCords.maxY) {\r\n                        y = possibleSwipeCords.maxY;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setZoomStyles({\r\n            x: x,\r\n            y: y,\r\n            scale: scale,\r\n        });\r\n        this.left = x;\r\n        this.top = y;\r\n        if (resetToMax) {\r\n            this.setZoomImageSize();\r\n        }\r\n    };\r\n    Zoom.prototype.resetImageTranslate = function (index) {\r\n        if (!this.isImageSlide(index)) {\r\n            return;\r\n        }\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        this.imageReset = false;\r\n        $image.removeClass('reset-transition reset-transition-y reset-transition-x');\r\n        this.core.outer.removeClass('lg-actual-size');\r\n        $image.css('width', 'auto').css('height', 'auto');\r\n        setTimeout(function () {\r\n            $image.removeClass('no-transition');\r\n        }, 10);\r\n    };\r\n    Zoom.prototype.setZoomImageSize = function () {\r\n        var _this = this;\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                $image.addClass('no-transition');\r\n                _this.imageReset = true;\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION);\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);\r\n                $image\r\n                    .css('width', $image.get().naturalWidth + 'px')\r\n                    .css('height', $image.get().naturalHeight + 'px');\r\n                _this.core.outer.addClass('lg-actual-size');\r\n                if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition');\r\n                }\r\n                else if (dragAllowedAxises.allowX &&\r\n                    !dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-x');\r\n                }\r\n                else if (!dragAllowedAxises.allowX &&\r\n                    dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-y');\r\n                }\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION + 50);\r\n    };\r\n    /**\r\n     * @desc apply scale3d to image and translate to image wrap\r\n     * @param {style} X,Y and scale\r\n     */\r\n    Zoom.prototype.setZoomStyles = function (style) {\r\n        var $imageWrap = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var $dummyImage = this.core.outer\r\n            .find('.lg-current .lg-dummy-img')\r\n            .first();\r\n        this.scale = style.scale;\r\n        $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\r\n        $imageWrap.css('transform', transform);\r\n    };\r\n    /**\r\n     * @param index - Index of the current slide\r\n     * @param event - event will be available only if the function is called on clicking/taping the imags\r\n     */\r\n    Zoom.prototype.setActualSize = function (index, event) {\r\n        var _this = this;\r\n        if (this.zoomInProgress) {\r\n            return;\r\n        }\r\n        this.zoomInProgress = true;\r\n        var currentItem = this.core.galleryItems[this.core.index];\r\n        this.resetImageTranslate(index);\r\n        setTimeout(function () {\r\n            // Allow zoom only on image\r\n            if (!currentItem.src ||\r\n                _this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                return;\r\n            }\r\n            var scale = _this.getCurrentImageActualSizeScale();\r\n            var prevScale = _this.scale;\r\n            if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                _this.scale = 1;\r\n            }\r\n            else {\r\n                _this.scale = _this.getScale(scale);\r\n            }\r\n            _this.setPageCords(event);\r\n            _this.beginZoom(_this.scale);\r\n            _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);\r\n        }, 50);\r\n        setTimeout(function () {\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        }, 60);\r\n        setTimeout(function () {\r\n            _this.zoomInProgress = false;\r\n        }, ZOOM_TRANSITION_DURATION + 110);\r\n    };\r\n    Zoom.prototype.getNaturalWidth = function (index) {\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        var naturalWidth = this.core.galleryItems[index].width;\r\n        return naturalWidth\r\n            ? parseFloat(naturalWidth)\r\n            : $image.get().naturalWidth;\r\n    };\r\n    Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n        var _scale;\r\n        var scale;\r\n        if (naturalWidth >= width) {\r\n            _scale = naturalWidth / width;\r\n            scale = _scale || 2;\r\n        }\r\n        else {\r\n            scale = 1;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var width = $image.get().offsetWidth;\r\n        var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n        return this.getActualSizeScale(naturalWidth, width);\r\n    };\r\n    Zoom.prototype.getPageCords = function (event) {\r\n        var cords = {};\r\n        if (event) {\r\n            cords.x = event.pageX || event.touches[0].pageX;\r\n            cords.y = event.pageY || event.touches[0].pageY;\r\n        }\r\n        else {\r\n            var containerRect = this.core.$content\r\n                .get()\r\n                .getBoundingClientRect();\r\n            cords.x = containerRect.width / 2 + containerRect.left;\r\n            cords.y =\r\n                containerRect.height / 2 + this.scrollTop + containerRect.top;\r\n        }\r\n        return cords;\r\n    };\r\n    Zoom.prototype.setPageCords = function (event) {\r\n        var pageCords = this.getPageCords(event);\r\n        this.pageX = pageCords.x;\r\n        this.pageY = pageCords.y;\r\n    };\r\n    Zoom.prototype.manageActualPixelClassNames = function () {\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n            .addClass(this.settings.actualSizeIcons.zoomOut);\r\n    };\r\n    // If true, zoomed - in else zoomed out\r\n    Zoom.prototype.beginZoom = function (scale) {\r\n        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n        if (scale > 1) {\r\n            this.core.outer.addClass('lg-zoomed');\r\n            this.manageActualPixelClassNames();\r\n        }\r\n        else {\r\n            this.resetZoom();\r\n        }\r\n        return scale > 1;\r\n    };\r\n    Zoom.prototype.getScale = function (scale) {\r\n        var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n        if (scale < 1) {\r\n            scale = 1;\r\n        }\r\n        else if (scale > actualSizeScale) {\r\n            scale = actualSizeScale;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.init = function () {\r\n        var _this = this;\r\n        if (!this.settings.zoom) {\r\n            return;\r\n        }\r\n        this.buildTemplates();\r\n        this.enableZoomOnSlideItemLoad();\r\n        var tapped = null;\r\n        this.core.outer.on('dblclick.lg', function (event) {\r\n            if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                return;\r\n            }\r\n            _this.setActualSize(_this.core.index, event);\r\n        });\r\n        this.core.outer.on('touchstart.lg', function (event) {\r\n            var $target = _this.$LG(event.target);\r\n            if (event.touches.length === 1 && $target.hasClass('lg-image')) {\r\n                if (!tapped) {\r\n                    tapped = setTimeout(function () {\r\n                        tapped = null;\r\n                    }, 300);\r\n                }\r\n                else {\r\n                    clearTimeout(tapped);\r\n                    tapped = null;\r\n                    event.preventDefault();\r\n                    _this.setActualSize(_this.core.index, event);\r\n                }\r\n            }\r\n        });\r\n        this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\r\n            if (!_this.core.lgOpened ||\r\n                !_this.isImageSlide(_this.core.index) ||\r\n                _this.core.touchAction) {\r\n                return;\r\n            }\r\n            var _LGel = _this.core\r\n                .getSlideItem(_this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            _this.top = 0;\r\n            _this.left = 0;\r\n            _this.setZoomEssentials();\r\n            _this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });\r\n            _this.positionChanged = true;\r\n        });\r\n        // Update zoom on resize and orientationchange\r\n        this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n        });\r\n        this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var timeout = 0;\r\n            if (_this.imageReset) {\r\n                _this.resetImageTranslate(_this.core.index);\r\n                timeout = 50;\r\n            }\r\n            setTimeout(function () {\r\n                var scale = _this.scale - _this.settings.scale;\r\n                if (scale < 1) {\r\n                    scale = 1;\r\n                }\r\n                _this.beginZoom(scale);\r\n                _this.zoomImage(scale, -_this.settings.scale, true, !_this.settings.infiniteZoom);\r\n            }, timeout);\r\n        });\r\n        this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n            _this.zoomIn();\r\n        });\r\n        this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n            _this.setActualSize(_this.core.index);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n            _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n        });\r\n        this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n            // Set the initial value center\r\n            _this.pageX = _this.core.outer.width() / 2;\r\n            _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\r\n            _this.scale = 1;\r\n        });\r\n        // Reset zoom on slide change\r\n        this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n            var prevIndex = event.detail.prevIndex;\r\n            _this.scale = 1;\r\n            _this.positionChanged = false;\r\n            _this.zoomInProgress = false;\r\n            _this.resetZoom(prevIndex);\r\n            _this.resetImageTranslate(prevIndex);\r\n            if (_this.isImageSlide(_this.core.index)) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        });\r\n        // Drag option after zoom\r\n        this.zoomDrag();\r\n        this.pinchZoom();\r\n        this.zoomSwipe();\r\n        // Store the zoomable timeout value just to clear it while closing\r\n        this.zoomableTimeout = false;\r\n        this.positionChanged = false;\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.zoomIn = function () {\r\n        // Allow zoom only on image\r\n        if (!this.isImageSlide(this.core.index)) {\r\n            return;\r\n        }\r\n        var scale = this.scale + this.settings.scale;\r\n        if (!this.settings.infiniteZoom) {\r\n            scale = this.getScale(scale);\r\n        }\r\n        this.beginZoom(scale);\r\n        this.zoomImage(scale, Math.min(this.settings.scale, scale - this.scale), true, !this.settings.infiniteZoom);\r\n    };\r\n    // Reset zoom effect\r\n    Zoom.prototype.resetZoom = function (index) {\r\n        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n            .addClass(this.settings.actualSizeIcons.zoomIn);\r\n        $item.find('.lg-img-wrap').first().removeAttr('style');\r\n        $item.find('.lg-image').first().removeAttr('style');\r\n        this.scale = 1;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        // Reset pagx pagy values to center\r\n        this.setPageCords();\r\n    };\r\n    Zoom.prototype.getTouchDistance = function (e) {\r\n        return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) *\r\n            (e.touches[0].pageX - e.touches[1].pageX) +\r\n            (e.touches[0].pageY - e.touches[1].pageY) *\r\n                (e.touches[0].pageY - e.touches[1].pageY));\r\n    };\r\n    Zoom.prototype.pinchZoom = function () {\r\n        var _this = this;\r\n        var startDist = 0;\r\n        var pinchStarted = false;\r\n        var initScale = 1;\r\n        var prevScale = 0;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.outer.on('touchstart.lg', function (e) {\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            if (e.touches.length === 2) {\r\n                e.preventDefault();\r\n                if (_this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                    return;\r\n                }\r\n                initScale = _this.scale || 1;\r\n                _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                _this.setPageCords(e);\r\n                _this.resetImageTranslate(_this.core.index);\r\n                _this.core.touchAction = 'pinch';\r\n                startDist = _this.getTouchDistance(e);\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 2 &&\r\n                _this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                var endDist = _this.getTouchDistance(e);\r\n                var distance = startDist - endDist;\r\n                if (!pinchStarted && Math.abs(distance) > 5) {\r\n                    pinchStarted = true;\r\n                }\r\n                if (pinchStarted) {\r\n                    prevScale = _this.scale;\r\n                    var _scale = Math.max(1, initScale + -distance * 0.02);\r\n                    _this.scale =\r\n                        Math.round((_scale + Number.EPSILON) * 100) / 100;\r\n                    var diff = _this.scale - prevScale;\r\n                    _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                pinchStarted = false;\r\n                startDist = 0;\r\n                if (_this.scale <= 1) {\r\n                    _this.resetZoom();\r\n                }\r\n                else {\r\n                    var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                    if (_this.scale >= actualSizeScale) {\r\n                        var scaleDiff = actualSizeScale - _this.scale;\r\n                        if (scaleDiff === 0) {\r\n                            scaleDiff = 0.01;\r\n                        }\r\n                        _this.zoomImage(actualSizeScale, scaleDiff, false, true);\r\n                    }\r\n                    _this.manageActualPixelClassNames();\r\n                    _this.core.outer.addClass('lg-zoomed');\r\n                }\r\n                _this.core.touchAction = undefined;\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {\r\n        var distanceXnew = endCoords.x - startCoords.x;\r\n        var distanceYnew = endCoords.y - startCoords.y;\r\n        var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n        var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n        if (speedX > 2) {\r\n            speedX += 1;\r\n        }\r\n        if (speedY > 2) {\r\n            speedY += 1;\r\n        }\r\n        distanceXnew = distanceXnew * speedX;\r\n        distanceYnew = distanceYnew * speedY;\r\n        var _LGel = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var distance = {};\r\n        distance.x = this.left + distanceXnew;\r\n        distance.y = this.top + distanceYnew;\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords();\r\n        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                    distance.y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                    distance.y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                    distance.x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                    distance.x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            if (allowY) {\r\n                this.top = distance.y;\r\n            }\r\n            else {\r\n                distance.y = this.top;\r\n            }\r\n            if (allowX) {\r\n                this.left = distance.x;\r\n            }\r\n            else {\r\n                distance.x = this.left;\r\n            }\r\n            this.setZoomSwipeStyles(_LGel, distance);\r\n            this.positionChanged = true;\r\n        }\r\n    };\r\n    Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\r\n        var distance = {};\r\n        if (allowY) {\r\n            distance.y = this.top + (endCoords.y - startCoords.y);\r\n            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                var diffMinY = possibleSwipeCords.minY - distance.y;\r\n                distance.y = possibleSwipeCords.minY - diffMinY / 6;\r\n            }\r\n            else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                var diffMaxY = distance.y - possibleSwipeCords.maxY;\r\n                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.y = this.top;\r\n        }\r\n        if (allowX) {\r\n            distance.x = this.left + (endCoords.x - startCoords.x);\r\n            if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                var diffMinX = possibleSwipeCords.minX - distance.x;\r\n                distance.x = possibleSwipeCords.minX - diffMinX / 6;\r\n            }\r\n            else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                var difMaxX = distance.x - possibleSwipeCords.maxX;\r\n                distance.x = possibleSwipeCords.maxX + difMaxX / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.x = this.left;\r\n        }\r\n        return distance;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\r\n        return x >= minX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\r\n        return x <= maxX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\r\n        return y >= minY;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\r\n        return y <= maxY;\r\n    };\r\n    Zoom.prototype.isImageSlide = function (index) {\r\n        var currentItem = this.core.galleryItems[index];\r\n        return this.core.getSlideType(currentItem) === 'image';\r\n    };\r\n    Zoom.prototype.getPossibleSwipeDragCords = function (scale) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var bottom = this.core.mediaContainerPosition.bottom;\r\n        var imgRect = $image.get().getBoundingClientRect();\r\n        var imageHeight = imgRect.height;\r\n        var imageWidth = imgRect.width;\r\n        if (scale) {\r\n            imageHeight = imageHeight + scale * imageHeight;\r\n            imageWidth = imageWidth + scale * imageWidth;\r\n        }\r\n        var minY = (imageHeight - this.containerRect.height) / 2;\r\n        var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\r\n        var minX = (imageWidth - this.containerRect.width) / 2;\r\n        var maxX = (this.containerRect.width - imageWidth) / 2;\r\n        var possibleSwipeCords = {\r\n            minY: minY,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            maxX: maxX,\r\n        };\r\n        return possibleSwipeCords;\r\n    };\r\n    Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n        LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n    };\r\n    Zoom.prototype.zoomSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime = new Date();\r\n        var endTime = new Date();\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.$inner.on('touchstart.lg', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) &&\r\n                e.touches.length === 1 &&\r\n                _this.core.outer.hasClass('lg-zoomed')) {\r\n                e.preventDefault();\r\n                startTime = new Date();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (allowX || allowY) {\r\n                    startCoords = _this.getSwipeCords(e);\r\n                }\r\n                possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                // reset opacity and transition duration\r\n                _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 1 &&\r\n                _this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                endCoords = _this.getSwipeCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                    Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                    isMoved = true;\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = undefined;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                if (!isMoved) {\r\n                    return;\r\n                }\r\n                isMoved = false;\r\n                endTime = new Date();\r\n                var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.zoomDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDragging = false;\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime;\r\n        var endTime;\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var $item = _this.core.getSlideItem(_this.core.index);\r\n            if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) {\r\n                startTime = new Date();\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                    if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                        (allowX || allowY)) {\r\n                        e.preventDefault();\r\n                        startCoords = _this.getDragCords(e);\r\n                        possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                        isDragging = true;\r\n                        _this.core.outer\r\n                            .removeClass('lg-grab')\r\n                            .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                        // reset opacity and transition duration\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                isMoved = true;\r\n                endCoords = _this.getDragCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                _this.setZoomSwipeStyles(_LGel, distance);\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                endTime = new Date();\r\n                isDragging = false;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                // Fix for chrome mouse move on click\r\n                if (isMoved &&\r\n                    (startCoords.x !== endCoords.x ||\r\n                        startCoords.y !== endCoords.y)) {\r\n                    endCoords = _this.getDragCords(e);\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n                }\r\n                isMoved = false;\r\n            }\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        });\r\n    };\r\n    Zoom.prototype.closeGallery = function () {\r\n        this.resetZoom();\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.destroy = function () {\r\n        // Unbind all events added by lightGallery zoom plugin\r\n        this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n        this.core.LGel.off('.lg.zoom');\r\n        this.core.LGel.off('.zoom');\r\n        clearTimeout(this.zoomableTimeout);\r\n        this.zoomableTimeout = false;\r\n    };\r\n    return Zoom;\r\n}());\n\nexport default Zoom;\n\n"],
  "mappings": "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",
  "names": ["__assign", "Zoom"]
}
